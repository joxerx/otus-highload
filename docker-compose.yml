services:
  db:
    image: postgres:14.0
    restart: unless-stopped
    env_file:
      - ./.env
    volumes:
      - ./.docker/postgres-data:/var/lib/postgresql/data
    networks:
      - otus-highload-net
    container_name: otus-highload-db

  web:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - ./.env
    ports:
      - "127.0.0.1:${DOCKER_EXPOSE_PORT?80}:${GO_PORT?80}"
    depends_on:
      - db
    volumes:
      - .:/code/
    command: /runserver.sh
    restart: unless-stopped
    networks:
      - otus-highload-net
    container_name: otus-highload-web

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - ./.docker/prometheus-data/:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    ports:
      - "9090:9090"
    networks:
      - otus-highload-net

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    ports:
      - "8080:8080"
    privileged: true
    volumes:
      - /:/rootfs:ro
      - /var/run/docker.sock:/var/run/docker.sock:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - otus-highload-net

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - ./.docker/grafana-data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - otus-highload-net

networks:
  otus-highload-net:
